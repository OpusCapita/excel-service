import { List } from 'immutable';

export var getColumns = function getColumns(columns, visibleColumns) {
  if (!List.isList(visibleColumns)) {
    return columns;
  }
  var newColumns = [];
  visibleColumns.forEach(function (key) {
    var columnIndex = columns.findIndex(function (c) {
      return c.valueKeyPath.join('/') === key;
    });
    if (columnIndex !== -1) {
      newColumns.push(columns[columnIndex]);
    }
  });
  return newColumns;
};

export var convertArrayBufferToString = function convertArrayBufferToString(data) {
  /* eslint-disable no-plusplus */
  var w = 10240;
  var str = '';
  var l = 0;
  for (l; l < data.byteLength / w; ++l) {
    str += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
  }
  str += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
  return str;
};

export var convertStringToArrayBuffer = function convertStringToArrayBuffer(str) {
  /* eslint-disable no-bitwise */
  var buf = new ArrayBuffer(str.length);
  var view = new Uint8Array(buf);
  [].concat(str).forEach(function (ch, i) {
    view[i] = str.charCodeAt(i) & 0xFF;
  });
  return buf;
};

export var convertValueType = function convertValueType(value, type) {
  var VALUE_TYPES = {
    number: 'number',
    string: 'string'
  };
  switch (type) {
    case VALUE_TYPES.number:
      return Number(value);
    default:
      return String(value);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9leGNlbC1zZXJ2aWNlLnV0aWxzLmpzIl0sIm5hbWVzIjpbIkxpc3QiLCJnZXRDb2x1bW5zIiwiY29sdW1ucyIsInZpc2libGVDb2x1bW5zIiwiaXNMaXN0IiwibmV3Q29sdW1ucyIsImZvckVhY2giLCJrZXkiLCJjb2x1bW5JbmRleCIsImZpbmRJbmRleCIsImMiLCJ2YWx1ZUtleVBhdGgiLCJqb2luIiwicHVzaCIsImNvbnZlcnRBcnJheUJ1ZmZlclRvU3RyaW5nIiwiZGF0YSIsInciLCJzdHIiLCJsIiwiYnl0ZUxlbmd0aCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImFwcGx5IiwiVWludDhBcnJheSIsInNsaWNlIiwiY29udmVydFN0cmluZ1RvQXJyYXlCdWZmZXIiLCJidWYiLCJBcnJheUJ1ZmZlciIsImxlbmd0aCIsInZpZXciLCJjaCIsImkiLCJjaGFyQ29kZUF0IiwiY29udmVydFZhbHVlVHlwZSIsInZhbHVlIiwidHlwZSIsIlZBTFVFX1RZUEVTIiwibnVtYmVyIiwic3RyaW5nIiwiTnVtYmVyIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxJQUFULFFBQXFCLFdBQXJCOztBQUVBLE9BQU8sSUFBTUMsYUFBYSxTQUFiQSxVQUFhLENBQUNDLE9BQUQsRUFBVUMsY0FBVixFQUE2QjtBQUNyRCxNQUFJLENBQUNILEtBQUtJLE1BQUwsQ0FBWUQsY0FBWixDQUFMLEVBQWtDO0FBQ2hDLFdBQU9ELE9BQVA7QUFDRDtBQUNELE1BQU1HLGFBQWEsRUFBbkI7QUFDQUYsaUJBQWVHLE9BQWYsQ0FBdUIsVUFBQ0MsR0FBRCxFQUFTO0FBQzlCLFFBQU1DLGNBQWNOLFFBQVFPLFNBQVIsQ0FBa0I7QUFBQSxhQUFLQyxFQUFFQyxZQUFGLENBQWVDLElBQWYsQ0FBb0IsR0FBcEIsTUFBNkJMLEdBQWxDO0FBQUEsS0FBbEIsQ0FBcEI7QUFDQSxRQUFJQyxnQkFBZ0IsQ0FBQyxDQUFyQixFQUF3QjtBQUN0QkgsaUJBQVdRLElBQVgsQ0FBZ0JYLFFBQVFNLFdBQVIsQ0FBaEI7QUFDRDtBQUNGLEdBTEQ7QUFNQSxTQUFPSCxVQUFQO0FBQ0QsQ0FaTTs7QUFjUCxPQUFPLElBQU1TLDZCQUE2QixTQUE3QkEsMEJBQTZCLENBQUNDLElBQUQsRUFBVTtBQUNsRDtBQUNBLE1BQU1DLElBQUksS0FBVjtBQUNBLE1BQUlDLE1BQU0sRUFBVjtBQUNBLE1BQUlDLElBQUksQ0FBUjtBQUNBLE9BQUtBLENBQUwsRUFBUUEsSUFBSUgsS0FBS0ksVUFBTCxHQUFrQkgsQ0FBOUIsRUFBaUMsRUFBRUUsQ0FBbkMsRUFBc0M7QUFDcENELFdBQU9HLE9BQU9DLFlBQVAsQ0FBb0JDLEtBQXBCLENBQTBCLElBQTFCLEVBQWdDLElBQUlDLFVBQUosQ0FBZVIsS0FBS1MsS0FBTCxDQUFXTixJQUFJRixDQUFmLEVBQW1CRSxJQUFJRixDQUFMLEdBQVVBLENBQTVCLENBQWYsQ0FBaEMsQ0FBUDtBQUNEO0FBQ0RDLFNBQU9HLE9BQU9DLFlBQVAsQ0FBb0JDLEtBQXBCLENBQTBCLElBQTFCLEVBQWdDLElBQUlDLFVBQUosQ0FBZVIsS0FBS1MsS0FBTCxDQUFXTixJQUFJRixDQUFmLENBQWYsQ0FBaEMsQ0FBUDtBQUNBLFNBQU9DLEdBQVA7QUFDRCxDQVZNOztBQVlQLE9BQU8sSUFBTVEsNkJBQTZCLFNBQTdCQSwwQkFBNkIsQ0FBQ1IsR0FBRCxFQUFTO0FBQ2pEO0FBQ0EsTUFBTVMsTUFBTSxJQUFJQyxXQUFKLENBQWdCVixJQUFJVyxNQUFwQixDQUFaO0FBQ0EsTUFBTUMsT0FBTyxJQUFJTixVQUFKLENBQWVHLEdBQWYsQ0FBYjtBQUNBLFlBQUlULEdBQUosRUFBU1gsT0FBVCxDQUFpQixVQUFDd0IsRUFBRCxFQUFLQyxDQUFMLEVBQVc7QUFDMUJGLFNBQUtFLENBQUwsSUFBVWQsSUFBSWUsVUFBSixDQUFlRCxDQUFmLElBQW9CLElBQTlCO0FBQ0QsR0FGRDtBQUdBLFNBQU9MLEdBQVA7QUFDRCxDQVJNOztBQVVQLE9BQU8sSUFBTU8sbUJBQW1CLFNBQW5CQSxnQkFBbUIsQ0FBQ0MsS0FBRCxFQUFRQyxJQUFSLEVBQWlCO0FBQy9DLE1BQU1DLGNBQWM7QUFDbEJDLFlBQVEsUUFEVTtBQUVsQkMsWUFBUTtBQUZVLEdBQXBCO0FBSUEsVUFBUUgsSUFBUjtBQUNFLFNBQUtDLFlBQVlDLE1BQWpCO0FBQ0UsYUFBT0UsT0FBT0wsS0FBUCxDQUFQO0FBQ0Y7QUFDRSxhQUFPZCxPQUFPYyxLQUFQLENBQVA7QUFKSjtBQU1ELENBWE0iLCJmaWxlIjoiZXhjZWwtc2VydmljZS51dGlscy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExpc3QgfSBmcm9tICdpbW11dGFibGUnO1xuXG5leHBvcnQgY29uc3QgZ2V0Q29sdW1ucyA9IChjb2x1bW5zLCB2aXNpYmxlQ29sdW1ucykgPT4ge1xuICBpZiAoIUxpc3QuaXNMaXN0KHZpc2libGVDb2x1bW5zKSkge1xuICAgIHJldHVybiBjb2x1bW5zO1xuICB9XG4gIGNvbnN0IG5ld0NvbHVtbnMgPSBbXTtcbiAgdmlzaWJsZUNvbHVtbnMuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgY29uc3QgY29sdW1uSW5kZXggPSBjb2x1bW5zLmZpbmRJbmRleChjID0+IGMudmFsdWVLZXlQYXRoLmpvaW4oJy8nKSA9PT0ga2V5KTtcbiAgICBpZiAoY29sdW1uSW5kZXggIT09IC0xKSB7XG4gICAgICBuZXdDb2x1bW5zLnB1c2goY29sdW1uc1tjb2x1bW5JbmRleF0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBuZXdDb2x1bW5zO1xufTtcblxuZXhwb3J0IGNvbnN0IGNvbnZlcnRBcnJheUJ1ZmZlclRvU3RyaW5nID0gKGRhdGEpID0+IHtcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tcGx1c3BsdXMgKi9cbiAgY29uc3QgdyA9IDEwMjQwO1xuICBsZXQgc3RyID0gJyc7XG4gIGxldCBsID0gMDtcbiAgZm9yIChsOyBsIDwgZGF0YS5ieXRlTGVuZ3RoIC8gdzsgKytsKSB7XG4gICAgc3RyICs9IFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgbmV3IFVpbnQ4QXJyYXkoZGF0YS5zbGljZShsICogdywgKGwgKiB3KSArIHcpKSk7XG4gIH1cbiAgc3RyICs9IFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgbmV3IFVpbnQ4QXJyYXkoZGF0YS5zbGljZShsICogdykpKTtcbiAgcmV0dXJuIHN0cjtcbn07XG5cbmV4cG9ydCBjb25zdCBjb252ZXJ0U3RyaW5nVG9BcnJheUJ1ZmZlciA9IChzdHIpID0+IHtcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tYml0d2lzZSAqL1xuICBjb25zdCBidWYgPSBuZXcgQXJyYXlCdWZmZXIoc3RyLmxlbmd0aCk7XG4gIGNvbnN0IHZpZXcgPSBuZXcgVWludDhBcnJheShidWYpO1xuICBbLi4uc3RyXS5mb3JFYWNoKChjaCwgaSkgPT4ge1xuICAgIHZpZXdbaV0gPSBzdHIuY2hhckNvZGVBdChpKSAmIDB4RkY7XG4gIH0pO1xuICByZXR1cm4gYnVmO1xufTtcblxuZXhwb3J0IGNvbnN0IGNvbnZlcnRWYWx1ZVR5cGUgPSAodmFsdWUsIHR5cGUpID0+IHtcbiAgY29uc3QgVkFMVUVfVFlQRVMgPSB7XG4gICAgbnVtYmVyOiAnbnVtYmVyJyxcbiAgICBzdHJpbmc6ICdzdHJpbmcnLFxuICB9O1xuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlIFZBTFVFX1RZUEVTLm51bWJlcjpcbiAgICAgIHJldHVybiBOdW1iZXIodmFsdWUpO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbiAgfVxufTtcbiJdfQ==